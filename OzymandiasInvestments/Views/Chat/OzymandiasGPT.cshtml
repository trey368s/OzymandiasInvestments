<a class="btn btn-primary" data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample">
    OzymandiasGPT
</a>
<div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasExampleLabel">OzymandiasGPT</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>

    <div class="offcanvas-body d-flex flex-column h-100">
        <div id="chatWindow" class="flex-grow-1 overflow-auto border p-3 rounded custom-background"> 
            <!-- Chat content goes here -->
        </div>

        <style>
            .custom-background {
                background-color: #30115E;
                color: #7F6C9B;
            }
        </style>
        <br>
        <div class="row">
            <div class="col-9">
                <input type="text" id="userInput" class="form-control mb-3 w-100" placeholder=" Say something...">
            </div>
            <div class="col-3">
                <button onclick="sendMessage()" class="btn btn-secondary btn-block w-100">Send</button>
            </div>
        </div>
    </div>
</div>

<style>
    @@keyframes loadingDots {
        0% { content:  'Loading'; }
        25% { content: 'Loading.'; }
        50% { content: 'Loading..'; }
        75% { content: 'Loading...'; }
        100% { content: 'Loading'; }
    }
</style>

<style>
    .loading-dots::after {
        display: inline-block;
        content: 'Loading...';
        animation: loadingDots 1s infinite;
    }
</style>

<script>
    function sendMessage() {
        var userInput = document.getElementById('userInput').value;
        if (userInput.trim() === '') {
            return; // Avoid sending empty messages
        }

        // Step 1: Append User's Message Immediately
        var chatWindow = document.getElementById('chatWindow');
        chatWindow.innerHTML += `<p><strong>You:</strong> ${userInput}</p>`;

        // Step 2: Show Loading Indicator with Animation
        var loadingMessageId = 'loading-' + Date.now(); // Unique ID for the loading message
        chatWindow.innerHTML += `<p id="${loadingMessageId}"><strong>OzymandiasGPT:</strong> <span class="loading-dots"></span></p>`;

        // Scroll to the bottom of the chat window
        chatWindow.scrollTop = chatWindow.scrollHeight;

        // Step 3: Fetch AI Response
        fetch('/chat/ozymandiasgpt', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ userInput: userInput })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Step 4: Update UI with AI Response
                // Replace loading message with actual response
                document.getElementById(loadingMessageId).innerHTML = `<strong>OzymandiasGPT:</strong> ${data.response}`;
            } else {
                document.getElementById(loadingMessageId).innerHTML = `<strong>OzymandiasGPT:</strong> Error getting response`;
            }
        }).catch(error => {
            console.error('Error:', error);
            document.getElementById(loadingMessageId).innerHTML = `<strong>OzymandiasGPT:</strong> Error getting response`;
        });

        // Clear the input after sending
        document.getElementById('userInput').value = '';
    }
</script>