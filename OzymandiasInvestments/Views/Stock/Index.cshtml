@{
    ViewData["Title"] = "Home";
}
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model OzymandiasInvestments.Models.SolutionModels.HistoricalDataModel
<br>
<style>
    /* Add this style to make the chart-wrapper div cover the entire card */
    .chart-wrapper {
        position: relative;
        width: 100%;
        height: 100%;
    }

    /* Add this style to make the canvas cover the entire chart-wrapper div */
    #candlestick-chart {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
</style>
<div class="text-center">
    <h1 class="display-4">𓂀 Investment Tracker 𓁈</h1>
    <form class="d-flex" method="post" asp-controller="Stock" asp-action="Index">
        <input class="form-control me-sm-2" type="search" name="ticker" id="searchInput" placeholder="Enter a ticker symbol for detailed stock information.">
        <button class="btn btn-secondary my-2 my-sm-0" type="submit" id="searchButton">Search</button>
    </form>
</div>
<br/>
<div class="container">
    @if (Model == null || Model.Bars.Count() == 0)
    {
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                        <h1>Welcome👋</h1>
                    <div class="accordion" id="accordionExample">
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingOne">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                    My name is Ozymandias, King of Kings;
                                </button>
                            </h2>
                            <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample" style="">
                                <div class="accordion-body">
                                    <strong>"Look upon my works, ye mighty, and despair!"</strong> These words echo through the sands of time, as an ode to the ephemeral nature of power and glory. Inspired by Percy Shelley's poem, Ozymandias Investments stands as a testament to the transience of wealth and the enduring pursuit of financial wisdom.
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingTwo">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                    The lone and level sands stretch far away.
                                </button>
                            </h2>
                            <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample" style="">
                                <div class="accordion-body">
                                    In the vast expanse of financial markets, where business empires rise and fall, we invite you to explore a realm where knowledge reigns supreme. Our platform is not just a gateway to investments; it is a chronicle of markets, a repository of information, and a compass in the ever-shifting sands of finance.
                                </div>
                            </div>
                        </div>
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="headingThree">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                    Discover OzymandiasGPT
                                </button>
                            </h2>
                            <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample" style="">
                                <div class="accordion-body">
                                    <b><p>***Under Development***</p></b>
                                    <p>Embark on a journey through the digital deserts with OzymandiasGPT. Unearth a treasure trove of financial insights as we traverse the virtual ruins, echoing the financial wisdom of ancient pharaohs.</p>
                                    <a class="btn btn-primary" data-bs-toggle="offcanvas" href="#offcanvasExample" role="button" aria-controls="offcanvasExample">
                                        OzymandiasGPT
                                    </a>
                                    <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
                                        <div class="offcanvas-header">
                                            <h5 class="offcanvas-title" id="offcanvasExampleLabel">OzymandiasGPT</h5>
                                            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                                        </div>

                                        <div class="offcanvas-body d-flex flex-column h-100">
                                            <div id="chatWindow" class="flex-grow-1 overflow-auto border p-3 rounded custom-background">
                                                <!-- Chat content goes here -->
                                            </div>

                                            <style>
                                                .custom-background {
                                                    background-color: #30115E;
                                                    color: #7F6C9B;
                                                }
                                            </style>
                                            <br>
                                            <div class="row">
                                                <div class="col-9">
                                                    <input type="text" id="userInput" class="form-control mb-3 w-100" placeholder=" Say something...">
                                                </div>
                                                <div class="col-3">
                                                    <button onclick="sendMessage()" class="btn btn-secondary btn-block w-100">Send</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <style>
                                        @@keyframes loadingDots {
                                            0% {
                                                content: 'Loading';
                                            }

                                            25% {
                                                content: 'Loading.';
                                            }

                                            50% {
                                                content: 'Loading..';
                                            }

                                            75% {
                                                content: 'Loading...';
                                            }

                                            100% {
                                                content: 'Loading';
                                            }
                                        }
                                    </style>

                                    <style>
                                        .loading-dots::after {
                                            display: inline-block;
                                            content: 'Loading...';
                                            animation: loadingDots 1s infinite;
                                        }
                                    </style>

                                    <script>
                                        function sendMessage() {
                                            var userInput = document.getElementById('userInput').value;
                                            if (userInput.trim() === '') {
                                                return; // Avoid sending empty messages
                                            }

                                            // Step 1: Append User's Message Immediately
                                            var chatWindow = document.getElementById('chatWindow');
                                            chatWindow.innerHTML += `<p><strong>You:</strong> ${userInput}</p>`;

                                            // Step 2: Show Loading Indicator with Animation
                                            var loadingMessageId = 'loading-' + Date.now(); // Unique ID for the loading message
                                            chatWindow.innerHTML += `<p id="${loadingMessageId}"><strong>OzymandiasGPT:</strong> <span class="loading-dots"></span></p>`;

                                            // Scroll to the bottom of the chat window
                                            chatWindow.scrollTop = chatWindow.scrollHeight;

                                            // Step 3: Fetch AI Response
                                            fetch('/chat/ozymandiasgpt', {
                                                method: 'POST',
                                                headers: {
                                                    'Content-Type': 'application/json',
                                                },
                                                body: JSON.stringify({ userInput: userInput })
                                            })
                                                .then(response => response.json())
                                                .then(data => {
                                                    if (data.success) {
                                                        // Step 4: Update UI with AI Response
                                                        // Replace loading message with actual response
                                                        document.getElementById(loadingMessageId).innerHTML = `<strong>OzymandiasGPT:</strong> ${data.response}`;
                                                    } else {
                                                        document.getElementById(loadingMessageId).innerHTML = `<strong>OzymandiasGPT:</strong> Error getting response`;
                                                    }
                                                }).catch(error => {
                                                    console.error('Error:', error);
                                                    document.getElementById(loadingMessageId).innerHTML = `<strong>OzymandiasGPT:</strong> Error getting response`;
                                                });

                                            // Clear the input after sending
                                            document.getElementById('userInput').value = '';
                                        }

                                        document.getElementById('userInput').addEventListener('keyup', function (event) {
                                            if (event.key === 'Enter') {
                                                sendMessage();
                                            }
                                        });
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <img src="~/lib/Logo.png">
                </div>
            </div>
        </div>
        <div class="toast show ms-auto" role="alert" aria-live="assertive" aria-atomic="true" style="position: fixed; bottom: 20px; right: 20px;">
            <div class="toast-header">
                <strong class="me-auto">Disclaimer</strong>
                <button type="button" class="btn-close ms-2 mb-1" data-bs-dismiss="toast" aria-label="Close">
                    <span aria-hidden="true"></span>
                </button>
            </div>
            <div class="toast-body">
                This application is for development purposes only. It does not provide personal investment advice and is not a qualified licensed financial advisor.
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-title">
                        @if (Model.detailedInfo.companyName == "N/A" 
                        | Model.detailedInfo.companyName == "" 
                        | Model.detailedInfo.companyName == "null" 
                        | Model.detailedInfo.companyName == null)
                        {
                            <h3 id="symbol"></h3>
                        }
                        else
                        {
                            <h3 id="symbol" class="d-none"></h3>
                            <h3>@Model.detailedInfo.companyName</h3>
                        }
                    </div>
                    <div class="card-body">
                        <div class="card-wrapper" id="chart-card">
                            <div id="candlestick-chart"></div>
                        </div>
                    </div>
                    <script src="~/js/alpaca.js"></script>
                </div>
            </div>
            <div class="col">
                <div class="card">
                    <div class="card-title">
                        <h3>News</h3>
                    </div>
                    <style>
                        .scrollable-card-body {
                            max-height: 400px; /* Adjust height as needed */
                            overflow-y: auto;
                        }
                    </style>
                    <div class="card-body scrollable-card-body">
                        @if (Model.articles != null)
                        {
                            @foreach (var article in Model.articles)
                            {
                                <div style="display: flex; align-items: center;">
                                    <a href="@article.newsArticle.ArticleUrl" style="flex-grow: 1;">@article.newsArticle.Headline</a>
                                    @if (article.sentiment != null)
                                    {
                                        @if (int.Parse(article.sentiment.sentiment) < 50)
                                        {
                                            <span class="badge rounded-pill bg-danger">@article.sentiment.sentiment</span>
                                        }
                                        @if (int.Parse(article.sentiment.sentiment) < 75 && int.Parse(article.sentiment.sentiment) > 50)
                                        {
                                            <span class="badge rounded-pill bg-warning">@article.sentiment.sentiment</span>
                                        }
                                        @if (int.Parse(article.sentiment.sentiment) >= 75)
                                        {
                                            <span class="badge rounded-pill bg-success">@article.sentiment.sentiment</span>
                                        }
                                    }
                                </div>
                                <br>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card">
                    <h3>Detailed Info</h3>
                    <div class="card-body">
                        <p>Sector: @Model.detailedInfo.sector</p>
                        <p>Industry: @Model.detailedInfo.industry</p>
                        <div class="row">
                            <div class="col-6">
                                <span>Market Cap: @Model.detailedInfo.marketCap</span>
                            </div>
                            <div class="col-6">
                                <span>10D A. Volume: @Model.averageVolume</span>
                            </div>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-6">
                                <span>50D MA: $@Model.detailedInfo.movingAverage</span>
                            </div>
                            <div class="col-6">
                                <span>Target Price: $@Model.detailedInfo.targetPrice</span>
                            </div>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-6">
                                <span>Year Low: $@Model.detailedInfo.yearLow</span>
                            </div>
                            <div class="col-6">
                                <span>Year High: $@Model.detailedInfo.yearHigh</span>
                            </div>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-6">
                                <span>PE: @Model.detailedInfo.trailingPE</span>
                            </div>
                            <div class="col-6">
                                <span>EPS: @Model.detailedInfo.eps</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <h3>Description</h3>
            <p>@Model.detailedInfo.description</p>
        </div>
    }
</div>
<br>
<br/>
<script src="~/js/chart.js" asp-append-version="true"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    var modelData = @Html.Raw(Json.Serialize(Model));
</script>
<script>
    function showBottomRightToast() {
        $('.toast').toast('show');

        setTimeout(function () {
            $('.toast').toast('hide');
        }, 10000); 
    }

    $(document).ready(function () {
        showBottomRightToast();
    });
</script>