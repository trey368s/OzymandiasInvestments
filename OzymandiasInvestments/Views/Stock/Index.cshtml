@{
    ViewData["Title"] = "Home Page";
}
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model OzymandiasInvestments.Models.SolutionModels.HistoricalDataModel
<br>
<style>
    /* Add this style to make the chart-wrapper div cover the entire card */
    .chart-wrapper {
        position: relative;
        width: 100%;
        height: 100%;
    }

    /* Add this style to make the canvas cover the entire chart-wrapper div */
    #candlestick-chart {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
</style>
<div class="text-center">
    <h1 class="display-4">Investment Tracker</h1>
    <form class="d-flex" method="post" asp-controller="Stock" asp-action="Index">
        <input class="form-control me-sm-2" type="search" name="ticker" id = "searchInput" placeholder="Ticker Lookup">
        <button class="btn btn-secondary my-2 my-sm-0" type="submit" id="searchButton">Search</button>
    </form>
</div>
<br/>
<div class="container">
    @if (Model == null || Model.Bars.Count() == 0)
    {
        <h4 class="text-center">Enter a ticker symbol for detailed stock information.</h4>
    }
    else
    {
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-title">
                        <h3 id="symbol"></h3>
                    </div>
                    <div class="card-body">
                        <div class="card-wrapper" id="chart-card">
                            <div id="candlestick-chart"></div>
                        </div>
                    </div>
                    <script src="~/js/alpaca.js"></script>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-title">
                        <h3>News</h3>
                    </div>
                    <div class="card-body">
                        @if (Model.articles != null)
                        {
                            @foreach (var article in Model.articles)
                            {
                                <a href="@article.ArticleUrl"><p>@article.Headline</p></a>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <h3>Positions</h3>
                    @if (!User.Identity.IsAuthenticated)
                    {
                        <div class="card-body">
                            <p class=""><a id="login" asp-area="Identity" asp-page="/Account/Login">Login</a> to see open positions.</p>
                        </div>
                    }
                    else
                    {
                        @if (Model.Investments != null)
                        {
                            <div class="table-responsive mt-3">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th></th>
                                            <th>Ticker</th>
                                            <th>Shares</th>
                                            <th>Open Price</th>
                                            <th>Open Time</th>
                                            <th>Close Price</th>
                                            <th>Close Time</th>
                                            <th>Profit</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            string[] classes = new string[] { "table-primary", "table-success", "table-light", "table-danger", "table-warning", "table-info" };
                                        }
                                        @foreach (var investment in Model.Investments.Take(6))
                                        {
                                            int cssClasses = (int)(investment.Id % classes.Length);
                                            string rowClass = classes[cssClasses];
                                            <tr class="@rowClass">
                                                <td></td>
                                                <form id="postForm" method="post" action="@Url.Action("Index", "Stock")">
                                                    <input type="hidden" name="ticker" value="@investment.Symbol" />
                                                </form>
                                                <td><a onclick="document.getElementById('postForm').submit()">@investment.Symbol</a></td>
                                                <td>@investment.Shares</td>
                                                <td>$@investment.OpenPrice</td>
                                                <td>@investment.OpenTime</td>
                                                <td>@(investment.ClosePrice != null ? "$" + investment.ClosePrice : investment.ClosePrice)</td>
                                                <td>@investment.CloseTime</td>
                                                <td>@(investment.Profit != null ? "$" + investment.Profit : investment.Profit)</td>
                                                <td>
                                                    <di class="d-flex flex-row">
                                                        <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#updateModal-@investment.Id">Edit</button>
                                                        <div class="modal fade" id="updateModal-@investment.Id" tabindex="-1" role="dialog" aria-labelledby="updateModalLabel-@investment.Id" aria-hidden="true">
                                                            <div class="modal-dialog" role="document">
                                                                <div class="modal-content">
                                                                    <div class="modal-header">
                                                                        <h3 class="modal-title" id="updateModalLabel-@investment.Id">Update Investment</h3>
                                                                            <button type="button" class="close" onclick="$('#updateModal-@investment.Id').modal('hide');" aria-label="Close">
                                                                            <span aria-hidden="true">&times;</span>
                                                                        </button>
                                                                    </div>
                                                                    @await Html.PartialAsync("UpdateInvestment", investment)
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </di>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    }
</div>
<br>
<br/>
<script src="~/js/chart.js" asp-append-version="true"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    var currentTime = new Date().getTime();
    var lastAlertTime = localStorage.getItem('lastAlertTime');
    
    if (!lastAlertTime || (currentTime - lastAlertTime > 86400000)) {
        alert('This application is for development purposes only. It does not provide personal investment advice and is not a qualified licensed financial adviser.');
        localStorage.setItem('lastAlertTime', currentTime);
    }
</script>
<script>
    var modelData = @Html.Raw(Json.Serialize(Model));
</script>
<script>
    $(document).on('click', '[data-toggle="modal"]', function() {
        var targetModal = $(this).data('target');
        $(targetModal).modal('show');
    });
</script>
